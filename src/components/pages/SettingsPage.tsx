"use client";

import { useState, useEffect } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { Lock, Users, Settings, Palette, Plus, Edit, Trash2 } from "lucide-react";
import { validateSettingsPassword, setSettingsAccess, getSettingsAccess, clearSettingsAccess } from "@/lib/auth";
import type { Employee, Service, Organization } from "@/types";

export default function SettingsPage() {
  const [hasAccess, setHasAccess] = useState(false);
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [activeTab, setActiveTab] = useState<"appearance" | "employees" | "services" | "organizations">("appearance");
  const [theme, setTheme] = useState<"light" | "dark" | "black">("light");

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  const [employees, setEmployees] = useState<Employee[]>([
    {
      id: "1",
      name: "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
      position: "–ú–æ–π—â–∏–∫",
      salaryType: "percentage",
      salaryRate: 30,
      active: true,
      createdAt: new Date(),
    },
    {
      id: "2",
      name: "–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞",
      position: "–î–µ—Ç–µ–π–ª–µ—Ä",
      salaryType: "fixedPlusPercentage",
      salaryRate: 20,
      fixedSalary: 15000,
      active: true,
      createdAt: new Date(),
    },
  ]);

  const [services, setServices] = useState<Service[]>([
    {
      id: "1",
      name: "–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –º–æ–π–∫–∞",
      price: 1500,
      category: "–ú–æ–π–∫–∞",
      duration: 60,
      active: true,
      createdAt: new Date(),
    },
    {
      id: "2",
      name: "–•–∏–º—á–∏—Å—Ç–∫–∞ —Å–∞–ª–æ–Ω–∞",
      price: 2500,
      category: "–•–∏–º—á–∏—Å—Ç–∫–∞",
      duration: 120,
      active: true,
      createdAt: new Date(),
    },
  ]);

  const [organizations, setOrganizations] = useState<Organization[]>([
    {
      id: "1",
      name: "–û–û–û –ê–≤—Ç–æ+",
      contactPerson: "–ü–µ—Ç—Ä–æ–≤ –ò.–ò.",
      phone: "+7 (999) 123-45-67",
      email: "info@autoplus.ru",
      discount: 10,
      active: true,
      createdAt: new Date(),
    },
  ]);

  useEffect(() => {
    setHasAccess(getSettingsAccess());
  }, []);

  const handlePasswordSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    setError("");

    if (validateSettingsPassword(password)) {
      setSettingsAccess(true);
      setHasAccess(true);
      setPassword("");
    } else {
      setError("–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å");
    }
  };

  const handleLogout = () => {
    clearSettingsAccess();
    setHasAccess(false);
  };

  if (!hasAccess) {
    return (
      <div className="flex items-center justify-center min-h-[60vh]">
        <Card className="bg-white bg-opacity-95 backdrop-blur-md shadow-lg w-96">
          <CardHeader className="text-center">
            <div className="flex justify-center mb-4">
              <div className="p-3 bg-red-100 rounded-full">
                <Lock className="w-8 h-8 text-red-600" />
              </div>
            </div>
            <CardTitle className="text-xl">–î–æ—Å—Ç—É–ø –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º</CardTitle>
            <p className="text-gray-600 text-sm">
              –î–ª—è –≤—Ö–æ–¥–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
            </p>
          </CardHeader>
          <CardContent>
            <form onSubmit={handlePasswordSubmit} className="space-y-4">
              <div>
                <Label htmlFor="settings-password">–ü–∞—Ä–æ–ª—å</Label>
                <Input
                  id="settings-password"
                  type="password"
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                  className="mt-1"
                  required
                />
              </div>

              {error && (
                <div className="p-3 text-sm text-red-700 bg-red-50 border border-red-200 rounded-lg">
                  {error}
                </div>
              )}

              <Button type="submit" className="w-full">
                –í–æ–π—Ç–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
              </Button>
            </form>
          </CardContent>
        </Card>
      </div>
    );
  }

  const renderTabContent = () => {
    switch (activeTab) {
      case "appearance":
        return (
          <Card className="bg-white bg-opacity-95 backdrop-blur-md shadow-lg">
            <CardHeader>
              <CardTitle className="flex items-center space-x-2">
                <Palette className="w-5 h-5" />
                <span>–í–Ω–µ—à–Ω–∏–π –≤–∏–¥</span>
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              <div>
                <Label className="text-base font-medium">–¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è</Label>
                <p className="text-sm text-gray-600 mb-3">
                  –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                </p>
                <Select value={theme} onValueChange={(value: "light" | "dark" | "black") => setTheme(value)}>
                  <SelectTrigger className="w-64">
                    <SelectValue />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="light">‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è</SelectItem>
                    <SelectItem value="dark">üåô –¢—ë–º–Ω–∞—è</SelectItem>
                    <SelectItem value="black">‚ö´ –ß—ë—Ä–Ω–∞—è</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="pt-4 border-t">
                <Button>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</Button>
              </div>
            </CardContent>
          </Card>
        );

      case "employees":
        return (
          <Card className="bg-white bg-opacity-95 backdrop-blur-md shadow-lg">
            <CardHeader>
              <div className="flex items-center justify-between">
                <CardTitle className="flex items-center space-x-2">
                  <Users className="w-5 h-5" />
                  <span>–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</span>
                </CardTitle>
                <Button className="flex items-center space-x-2">
                  <Plus className="w-4 h-4" />
                  <span>–î–æ–±–∞–≤–∏—Ç—å</span>
                </Button>
              </div>
            </CardHeader>
            <CardContent>
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>–ò–º—è</TableHead>
                    <TableHead>–î–æ–ª–∂–Ω–æ—Å—Ç—å</TableHead>
                    <TableHead>–¢–∏–ø –æ–ø–ª–∞—Ç—ã</TableHead>
                    <TableHead>–°—Ç–∞–≤–∫–∞</TableHead>
                    <TableHead>–°—Ç–∞—Ç—É—Å</TableHead>
                    <TableHead>–î–µ–π—Å—Ç–≤–∏—è</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {employees.map((employee) => (
                    <TableRow key={employee.id}>
                      <TableCell className="font-medium">{employee.name}</TableCell>
                      <TableCell>{employee.position}</TableCell>
                      <TableCell>
                        {employee.salaryType === "percentage" ? "–ü—Ä–æ—Ü–µ–Ω—Ç" : "–û–∫–ª–∞–¥ + %"}
                      </TableCell>
                      <TableCell>
                        {employee.salaryType === "percentage"
                          ? `${employee.salaryRate}%`
                          : `${employee.fixedSalary?.toLocaleString()} ‚ÇΩ + ${employee.salaryRate}%`
                        }
                      </TableCell>
                      <TableCell>
                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${
                          employee.active ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800"
                        }`}>
                          {employee.active ? "–ê–∫—Ç–∏–≤–µ–Ω" : "–ù–µ–∞–∫—Ç–∏–≤–µ–Ω"}
                        </span>
                      </TableCell>
                      <TableCell>
                        <div className="flex space-x-2">
                          <Button variant="outline" size="sm">
                            <Edit className="w-4 h-4" />
                          </Button>
                          <Button variant="outline" size="sm" className="text-red-600 hover:text-red-700">
                            <Trash2 className="w-4 h-4" />
                          </Button>
                        </div>
                      </TableCell>
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
            </CardContent>
          </Card>
        );

      case "services":
        return (
          <Card className="bg-white bg-opacity-95 backdrop-blur-md shadow-lg">
            <CardHeader>
              <div className="flex items-center justify-between">
                <CardTitle className="flex items-center space-x-2">
                  <Settings className="w-5 h-5" />
                  <span>–£—Å–ª—É–≥–∏</span>
                </CardTitle>
                <Button className="flex items-center space-x-2">
                  <Plus className="w-4 h-4" />
                  <span>–î–æ–±–∞–≤–∏—Ç—å</span>
                </Button>
              </div>
            </CardHeader>
            <CardContent>
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>–ù–∞–∑–≤–∞–Ω–∏–µ</TableHead>
                    <TableHead>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</TableHead>
                    <TableHead>–¶–µ–Ω–∞</TableHead>
                    <TableHead>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</TableHead>
                    <TableHead>–°—Ç–∞—Ç—É—Å</TableHead>
                    <TableHead>–î–µ–π—Å—Ç–≤–∏—è</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {services.map((service) => (
                    <TableRow key={service.id}>
                      <TableCell className="font-medium">{service.name}</TableCell>
                      <TableCell>{service.category}</TableCell>
                      <TableCell>{service.price.toLocaleString()} ‚ÇΩ</TableCell>
                      <TableCell>{service.duration} –º–∏–Ω</TableCell>
                      <TableCell>
                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${
                          service.active ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800"
                        }`}>
                          {service.active ? "–ê–∫—Ç–∏–≤–Ω–∞" : "–ù–µ–∞–∫—Ç–∏–≤–Ω–∞"}
                        </span>
                      </TableCell>
                      <TableCell>
                        <div className="flex space-x-2">
                          <Button variant="outline" size="sm">
                            <Edit className="w-4 h-4" />
                          </Button>
                          <Button variant="outline" size="sm" className="text-red-600 hover:text-red-700">
                            <Trash2 className="w-4 h-4" />
                          </Button>
                        </div>
                      </TableCell>
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
            </CardContent>
          </Card>
        );

      case "organizations":
        return (
          <Card className="bg-white bg-opacity-95 backdrop-blur-md shadow-lg">
            <CardHeader>
              <div className="flex items-center justify-between">
                <CardTitle className="flex items-center space-x-2">
                  <Users className="w-5 h-5" />
                  <span>–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</span>
                </CardTitle>
                <Button className="flex items-center space-x-2">
                  <Plus className="w-4 h-4" />
                  <span>–î–æ–±–∞–≤–∏—Ç—å</span>
                </Button>
              </div>
            </CardHeader>
            <CardContent>
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>–ù–∞–∑–≤–∞–Ω–∏–µ</TableHead>
                    <TableHead>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ</TableHead>
                    <TableHead>–¢–µ–ª–µ—Ñ–æ–Ω</TableHead>
                    <TableHead>Email</TableHead>
                    <TableHead>–°–∫–∏–¥–∫–∞</TableHead>
                    <TableHead>–î–µ–π—Å—Ç–≤–∏—è</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {organizations.map((org) => (
                    <TableRow key={org.id}>
                      <TableCell className="font-medium">{org.name}</TableCell>
                      <TableCell>{org.contactPerson}</TableCell>
                      <TableCell>{org.phone}</TableCell>
                      <TableCell>{org.email}</TableCell>
                      <TableCell>{org.discount}%</TableCell>
                      <TableCell>
                        <div className="flex space-x-2">
                          <Button variant="outline" size="sm">
                            <Edit className="w-4 h-4" />
                          </Button>
                          <Button variant="outline" size="sm" className="text-red-600 hover:text-red-700">
                            <Trash2 className="w-4 h-4" />
                          </Button>
                        </div>
                      </TableCell>
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
            </CardContent>
          </Card>
        );

      default:
        return null;
    }
  };

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <Card className="bg-white bg-opacity-95 backdrop-blur-md shadow-lg">
        <CardHeader>
          <div className="flex items-center justify-between">
            <div>
              <CardTitle className="text-2xl font-semibold text-gray-900">
                –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã
              </CardTitle>
              <p className="text-gray-600 mt-1">
                –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
              </p>
            </div>
            <Button
              variant="outline"
              onClick={handleLogout}
              className="text-red-600 hover:text-red-700"
            >
              –í—ã–π—Ç–∏ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            </Button>
          </div>
        </CardHeader>
      </Card>

      {/* –í–∫–ª–∞–¥–∫–∏ */}
      <Card className="bg-white bg-opacity-95 backdrop-blur-md shadow-lg">
        <CardContent className="p-0">
          <div className="flex border-b">
            <button
              onClick={() => setActiveTab("appearance")}
              className={`px-6 py-4 text-sm font-medium border-b-2 ${
                activeTab === "appearance"
                  ? "border-blue-500 text-blue-600"
                  : "border-transparent text-gray-500 hover:text-gray-700"
              }`}
            >
              –í–Ω–µ—à–Ω–∏–π –≤–∏–¥
            </button>
            <button
              onClick={() => setActiveTab("employees")}
              className={`px-6 py-4 text-sm font-medium border-b-2 ${
                activeTab === "employees"
                  ? "border-blue-500 text-blue-600"
                  : "border-transparent text-gray-500 hover:text-gray-700"
              }`}
            >
              –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏
            </button>
            <button
              onClick={() => setActiveTab("services")}
              className={`px-6 py-4 text-sm font-medium border-b-2 ${
                activeTab === "services"
                  ? "border-blue-500 text-blue-600"
                  : "border-transparent text-gray-500 hover:text-gray-700"
              }`}
            >
              –£—Å–ª—É–≥–∏
            </button>
            <button
              onClick={() => setActiveTab("organizations")}
              className={`px-6 py-4 text-sm font-medium border-b-2 ${
                activeTab === "organizations"
                  ? "border-blue-500 text-blue-600"
                  : "border-transparent text-gray-500 hover:text-gray-700"
              }`}
            >
              –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
            </button>
          </div>
        </CardContent>
      </Card>

      {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–∫–∏ */}
      {renderTabContent()}
    </div>
  );
}
